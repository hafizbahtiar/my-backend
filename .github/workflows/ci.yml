name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-type-check:
    name: Pass Linting & Type Checking
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Type check
        run: bun run lint

      - name: Check formatting (if using prettier)
        run: |
          if [ -f "package.json" ] && grep -q "prettier" package.json; then
            bun run prettier --check "src/**/*.{ts,tsx}"
          else
            echo "Prettier not configured, skipping..."
          fi

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            bun run test
          else
            echo "No tests configured yet, skipping..."
          fi

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Run security audit
        run: bun pm audit

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test, security-audit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Check build output
        run: |
          if [ -d "dist" ]; then
            echo "✅ Build successful - dist directory exists"
            ls -la dist/
          else
            echo "⚠️ No dist directory found (Bun doesn't require build step)"
          fi

  # Optional: Add deployment step here
  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: [lint-and-type-check, test, build]
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Deploy
  #       run: |
  #         echo "Add your deployment steps here"
  #         # Example: Deploy to Vercel, Railway, etc.
